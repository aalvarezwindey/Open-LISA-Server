swagger: "2.0"
info:
  description: "This is a Electronic Instrument Adapter server."
  version: "1.0.0"
  title: "Swagger Electronic Instrument Adapter"
  contact:
    email: "grobles@fi.uba.ar"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "eia.swagger.io"
basePath: "/v2"

schemes:
- "https"

paths:
  /ping:
    get:
      summary: "Health check"
      responses:
        "200":
          description: "server is up and running"
  /instrument:
    get:
      tags:
      - "instrument"
      summary: "Get all avaiable instruments"
      description: ""
      operationId: "getInstruments"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Instrument"

  /instrument/{instrumentId}:
    get:
      tags:
      - "instrument"
      summary: "Find instrument by ID"
      description: "Returns a single instrument"
      operationId: "getInstrumentById"
      produces:
      - "application/json"
      parameters:
      - name: "instrumentId"
        in: "path"
        description: "ID of instrument to return"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Instrument"
        "404":
          description: "Instrument not found"
          schema:
            $ref: "#/definitions/InstrumentNotFoundError"

  /instrument/{instrumentId}/command:
    put:
      tags:
      - "instrument"
      summary: "Sends raw visa command to the specified instrument"
      description: "The use of this endpoint is discouraged. It sends the command to the instrument without any validation. It is assumed that the user sends a command validated and documented by the instrument's programming manual."
      produces:
      - "application/json"
      parameters:
      - name: "instrumentId"
        in: "path"
        description: "ID of instrument to send the command"
        required: true
        type: "string"
      responses:
        "200":
          description: "Command send successfully"
          schema:
            $ref: "#/definitions/CommandSendSuccess"
        "400":
          description: "Bad command"
          schema:
            $ref: "#/definitions/CommandSendError"
        "404":
          description: "Instrument not found"
          schema:
            $ref: "#/definitions/InstrumentNotFoundError"

  /instrument/oscilloscope/{instrumentId}/configuration:
    put:
      tags:
      - "instrument"
      summary: "Updates a oscilloscope configuration"
      description: ""
      operationId: "updateOscilloscopeConfiguration"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "instrumentId"
        in: "path"
        description: "ID of oscilloscope that configuration needs to be updated"
        required: true
        type: "integer"
        format: "int64"
      - name: "config"
        in: "body"
        description: "Updated config of the oscilloscope"
        required: true
        schema:
          $ref: "#/definitions/OscilloscopeConfiguration"
      responses:
        "405":
          description: "Invalid input"
        "404":
          description: "Instrument not found"
          schema:
            $ref: "#/definitions/InstrumentNotFoundError"

definitions:
  Instrument:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "string"
        example: "USB0::0x0699::0x0363::C107676::INSTR"
      type:
        type: "string"
        example: "Osciloscopio"
      brand:
        type: "string"
        example: "tektronix"
      model:
        type: "string"
        example: "tds1002b"
      status:
        type: "string"
        enum: ["AVAILABLE", "UNAVAILABLE"]

  CommandSendSuccess:
    type: "object"
    properties:
      code:
        type: "integer"
        example: 200
      description:
        type: "string"
        example: "command sent successfully"

  CommandSendError:
    type: "object"
    properties:
      code:
        type: "integer"
        example: 400
      description:
        type: "string"
        example: "pyvisa error description"

  InstrumentNotFoundError:
    type: "object"
    properties:
      code:
        type: "integer"
        example: 404
      description:
        type: "string"
        example: "not found"

  OscilloscopeConfiguration:
    type: "object"
    required:
    - "voltsScale"
    - "timeScale"
    properties:
      id:
        type: "string"
        example: "USB0::0x0699::0x0363::C107676::INSTR"
      voltsScale:
        type: "number"
        format: "floag64"
        example: 0.5
        description: "Voltage scale in volts"
      timeScale:
        type: "number"
        format: "floag64"
        example: 0.1
        description: "Time scale in seconds"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"